#!/usr/bin/env python3

# Script to copy/install the CWL files to a new directory.
#
# Requires that cwl/conf.py has been configured with the correct values. 
#
# Run the script using a command like this:
#
# install.py --source=/path/to/cwl_src --target=/path/to/new_cwl_install_dir
#

import argparse,os,shutil,subprocess,sys

SUBDIRS = ('bin', 'cwl', 'util', 'example_data')

def fatal(err):
    sys.stderr.write(err + "\n")
    sys.stderr.flush()
    sys.exit(1)

def validate_args(args):
    if os.path.realpath(args.source) == os.path.realpath(args.target):
        fatal("Named source and target directories are the same directory.")

    if not os.path.exists(args.source):
        fatal("Named source directory " + args.source + " does not exist.")

    if not os.path.isdir(args.source):
        fatal("Named source directory " + args.source + " is not actually a directory.")

    for subdir in SUBDIRS:
        if not os.path.exists(os.path.join(args.source, )):
            fatal("Named source directory " + args.source + " has no " + subdir + " subdirectory.")

    if os.path.exists(args.target):
        fatal("Named target directory " + args.target + " already exists.")

    if not os.path.exists(args.python3):
        fatal("Python3 executable " + args.python3 + " not found")

    gsnap = os.path.join(args.gsnap_bin, "GSNAP.py")
    if not os.path.exists(args.python3):
        fatal("GSNAP executable " + gsnap + " not found")

    smatlgsnap = os.path.join(args.gsnap_bin, "GSNAP.py")
    if not os.path.exists(args.python3):
        fatal("GSNAP executable " + gsnap + " not found")

        
def main():

    parser = argparse.ArgumentParser(description='Install Targeted Assembly pipeline.')
    parser.add_argument('--source', '-s', type=str, required=True, help='Path to the Targeted Assembly source code.')
    parser.add_argument('--target', '-t', type=str, required=True, help='Path to the target install directory.')
    parser.add_argument('--python3', '-p', type=str, required=True, help='Path to the Python 3 executable.')
    parser.add_argument('--gsnap_bin', '-g', type=str, required=True, help='Path to the GMAP/GSNAP bin/ directory.')
    parser.add_argument('--smalt_bin', '-m', type=str, required=True, help='Path to the SMALT bin/ directory.')
    args = parser.parse_args()

    # validate arguments
    validate_args(args)

    # create target directory
    print("creating " + args.target)
    os.mkdir(args.target, 0o755)
    
    # copy everything
    for subdir in SUBDIRS:
        src_subdir = os.path.join(args.source, subdir)
        tgt_subdir = os.path.join(args.target, subdir)
        print("copying " + src_subdir + " to " + tgt_subdir)
        shutil.copytree(src_subdir, tgt_subdir)

    # write new conf.py
    new_conf = os.path.join(args.target, "cwl", "conf.py")
    with open(new_conf, "w") as cfile:
        cfile.write("# conf.py autogenerated by install.py\n")
        cfile.write("TARGETED_ASSEMBLY_BIN = '{0}'\n".format(os.path.join(args.target, "bin")))
        cfile.write("PYTHON3_EXE = '{0}'\n".format(args.python3))
        cfile.write("GMAP_GSNAP_BIN = '{0}'\n".format(args.gsnap_bin))
        cfile.write("SMALT_BIN = '{0}'\n".format(args.smalt_bin))
        cfile.close()
        
    # run setup.py
    print("running setup.py")
    setup = os.path.join(args.target, "cwl", "setup.py")
    new_cwl_path = os.path.join(args.target, "cwl")
    subprocess.run([setup, "--path_to_cwl", new_cwl_path])

if __name__ == '__main__':
    main()
